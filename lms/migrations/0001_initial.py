# Generated by Django 4.2.2 on 2023-07-04 13:16

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название курса')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание курса')),
                ('picture', models.ImageField(upload_to='picrures/', verbose_name='Изображение курса')),
                ('is_publish', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ['name', 'author', '-time_create', '-is_publish'],
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name=models.Model)),
                ('is_publish', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('deadline', models.DateTimeField(verbose_name='Дедлайн')),
            ],
            options={
                'verbose_name': 'Домашнее задание',
                'verbose_name_plural': 'Домашние задания',
                'ordering': ['deadline', 'module', 'is_publish'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Описание')),
                ('social_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на соц. сеть')),
                ('avatar', models.ImageField(upload_to='picrures/', verbose_name='Аватарка')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название модуля')),
                ('description', models.CharField(max_length=255, verbose_name='Описание модуля')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name=models.Model)),
                ('is_publish', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модули',
                'ordering': ['name', 'course', '-time_create', 'is_publish'],
            },
        ),
        migrations.CreateModel(
            name='MessageModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('is_publish', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.module', verbose_name='Модуль')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сообщение модуля',
                'verbose_name_plural': 'Сообщения модулей',
                'ordering': ['-time_create', 'user', '-is_publish'],
            },
        ),
        migrations.CreateModel(
            name='MessageCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('is_publish', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.course', verbose_name='Курс')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сообщение курса',
                'verbose_name_plural': 'Сообщения курсов',
                'ordering': ['-time_create', 'user', '-is_publish'],
            },
        ),
        migrations.CreateModel(
            name='HomeworkAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_disk_url_folder', models.URLField(verbose_name='Ссылка на папку в Google диске')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('mark', models.IntegerField(default=0, null=True, verbose_name='Оценка')),
                ('status', models.CharField(choices=[('ns', 'не сдано'), ('s', 'сдано'), ('rat', 'оценено')], default='не сдано', max_length=255, verbose_name='Статус')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.homework', verbose_name='Домашнее задание')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответ на домашнее задание',
                'verbose_name_plural': 'Ответы на домашние задания',
                'ordering': ['-time_create', 'user', 'homework', 'status'],
            },
        ),
        migrations.AddField(
            model_name='homework',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.module', verbose_name='Модуль'),
        ),
        migrations.AddField(
            model_name='course',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_courses', to='lms.profile', verbose_name='Автор курса'),
        ),
        migrations.AddField(
            model_name='course',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='enrolled_courses', to=settings.AUTH_USER_MODEL),
        ),
    ]
